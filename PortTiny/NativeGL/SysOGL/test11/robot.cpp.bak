//Scene.cc

#include "Scene.h"

#define BaseRadius 0.2
#define Radius 0.08
#define BaseLen 1
#define UpLen 0.6
#define LowLen 0.6
#define EyeRadius 0.04
#define ChairLegLen 0.55

int
main(int argc, char **argv)
{

  float v[][3]={{-0.3,-0.2,0.0},{0.3, -0.2, 0.0},
		{0.3, 0.2, 0.0},{-0.3, 0.2, 0.0} };

  //Light nodes
  Light *Light1=new Light;
  Light *Light2=new Light;
  
  TurnOff *Off1=new TurnOff(Light1);
  TurnOff *Off2=new TurnOff(Light2);

  //Setting Light Values :
  Light1->SetValue(POSITION, -2, -3, 1.5, 1);
  Light1->SetValue(SPOT_DIRECTION, 2, 3, -1.5);
  Light1->SetValue(CUTOFFANGLE, 40.0);
  Light1->TurnOn();     Light1->nodename="Light1";
   //string nodespace;

  Light2->SetValue(POSITION, 5, 5, 5, 0);
  Light2->SetValue(SPECULAR, 1.0, 1.0, 1.0, 1.0);
  Light2->SetValue(DIFFUSE, 1.0, 1.0, 1.0, 1.0);
  Light2->TurnOn();  Light2->nodename="Light2";


  //Nodes for Camera:
  Camera *Camera1=new Camera(PERSPECTIVE);

  Camera1->SetValue(POSITION, 2.2, 0.9, 3);
  Camera1->SetValue(AIMAT, 0, 0, 0);
  Camera1->SetValue(UPDIRECTION, 0, 1, 0);
  Camera1->SetValue(ASPECT, 1);
  Camera1->SetValue(NEAR, 0.1);
  Camera1->SetValue(FAR, 200);
  Camera1->SetValue(YANGLE, 50); 
  Camera1->nodename="Camera1";
  
  //Nodes for Robot:
  Material *RobotMat  =new Material; RobotMat  ->nodename="Robot_RobotMaterial"; 
  Material *EyeMat    =new Material; EyeMat    ->nodename="Robot_EyeMaterial  "; 
  Material *PaperMat  =new Material; PaperMat    ->nodename="Robot_PaperMaterial  "; 
  
  //Robot Value:
  RobotMat->SetValue(DIFFUSE, 0.0, 0.0, 1.0, 1.0);
  RobotMat->SetValue(AMBIENT, 0.0, 0.0, 1.0, 1.0);
  RobotMat->SetValue(SPECULAR, 1.0, 1.0, 1.0, 1.0);
  RobotMat->SetValue(SHININESS, 100.0);  
  
  EyeMat->SetValue(DIFFUSE, 1.0, 1.0, 1.0, 1.0);
  EyeMat->SetValue(AMBIENT, 1.0, 1.0, 1.0, 1.0);
  EyeMat->SetValue(SPECULAR, 1.0, 1.0, 1.0, 1.0);
  EyeMat->SetValue(SHININESS, 100.0);

  PaperMat  ->SetValue(DIFFUSE, 1.0, 1.0, 1.0, 1.0);    
  PaperMat  ->SetValue(AMBIENT, 1.0, 1.0, 1.0, 1.0);  
  PaperMat  ->SetValue(SPECULAR, 1.0, 1.0, 1.0, 1.0); 
  PaperMat  ->SetValue(SHININESS, 100.0);                                                                                                                          
  
  StlShape *StlPart01= new StlShape; StlPart01->nodename = "ur_shape01";
  StlShape *StlPart02= new StlShape; StlPart02->nodename = "ur_shape02";  
  StlShape *StlPart03= new StlShape; StlPart03->nodename = "ur_shape03"; 
  StlShape *StlPart04= new StlShape; StlPart04->nodename = "ur_shape04"; 
  StlShape *StlPart05= new StlShape; StlPart05->nodename = "ur_shape05"; 
  StlShape *StlPart06= new StlShape; StlPart06->nodename = "ur_shape06"; 
  StlShape *StlPart07= new StlShape; StlPart07->nodename = "ur_shape07"; 
    
  StlPart01 ->LoadStl("base.stl"    );
  StlPart02 ->LoadStl("forearm.stl" );
  StlPart03 ->LoadStl("shoulder.stl");
  StlPart04 ->LoadStl("upperarm.stl");
  StlPart05 ->LoadStl("wrist1.stl"  );
  StlPart06 ->LoadStl("wrist2.stl"  );
  StlPart07 ->LoadStl("wrist3.stl"  ); 
                                                                                                                                                                                                             
  Transformation *StlPart01Tf =new Transformation; StlPart01Tf->nodename="Robot_TF_StlPart01Tf";  
  Transformation *StlPart02Tf =new Transformation; StlPart02Tf->nodename="Robot_TF_StlPart02Tf";  
  Transformation *StlPart03Tf =new Transformation; StlPart03Tf->nodename="Robot_TF_StlPart03Tf";  
  Transformation *StlPart04Tf =new Transformation; StlPart04Tf->nodename="Robot_TF_StlPart04Tf";  
  Transformation *StlPart05Tf =new Transformation; StlPart05Tf->nodename="Robot_TF_StlPart05Tf";  
  Transformation *StlPart06Tf =new Transformation; StlPart06Tf->nodename="Robot_TF_StlPart06Tf";  
  Transformation *StlPart07Tf =new Transformation; StlPart07Tf->nodename="Robot_TF_StlPart07Tf";  
                            
  StlPart01 -> SetMaterial(GetColorMat(360*0.0/8.0, 1.0, 1.0 ));
  StlPart02 -> SetMaterial(GetColorMat(360*0.0/8.0, 1.0, 1.0 ));
  StlPart03 -> SetMaterial(GetColorMat(360*0.0/8.0, 1.0, 1.0 ));
  StlPart04 -> SetMaterial(GetColorMat(360*4.0/8.0, 1.0, 1.0 ));
  StlPart05 -> SetMaterial(GetColorMat(360*5.0/8.0, 1.0, 1.0 ));
  StlPart06 -> SetMaterial(GetColorMat(360*6.0/8.0, 1.0, 1.0 ));  
  StlPart07 -> SetMaterial(GetColorMat(360*7.0/8.0, 1.0, 1.0 ));
  
   /*StlPart01 -> SetMaterial(RobotMat);     
   StlPart02 -> SetMaterial(RobotMat);     
   StlPart03 -> SetMaterial(RobotMat);     
   StlPart04 -> SetMaterial(RobotMat);     
   StlPart05 -> SetMaterial(RobotMat);    
   StlPart06 -> SetMaterial(RobotMat);
   StlPart07 -> SetMaterial(RobotMat);*/
     
  /* <body name="ur10:base_link"      pos="0 0        0.435" childclass="ur10:arm">
     <body name="ur10:shoulder_link"  pos="0 0        0.1273">
     <body name="ur10:upper_arm_link" pos="0 0.220941 0">
     <body name="ur10:forearm_link"   pos="0 -0.1719  0.612">
     <body name="ur10:wrist_1_link"   pos="0 0        0.5723" childclass="ur10:wrist">
     <body name="ur10:wrist_2_link"   pos="0 0.1149   0">
     <body name="ur10:wrist_3_link"   pos="0 0        0.1157">*/     
    vec3d  vec1, vec2, vec3, vec4, vec5, vec6, vec7;
        
    vec1.x = - (0       );  vec1.y =   0;vec1.z = ( 0.87  );
    vec2.x = - (0       );  vec2.y =   0;vec2.z = ( 0.1273);
    vec3.x = - (0.220941);  vec3.y =   0;vec3.z = ( 0     );
    vec4.x = - (-0.1719 );  vec4.y =   0;vec4.z = ( 0.612 );
    vec5.x = - (0       );  vec5.y =   0;vec5.z = ( 0.5723);
    vec6.x = - (0.1149  );  vec6.y =   0;vec6.z = ( 0     );
    vec7.x = - (0       );  vec7.y =   0;vec7.z = ( 0.1157);
	
   /* vec1.x = 0;  vec1.y =0.435  ; vec1.z = 0        ;
    vec2.x = 0;  vec2.y =0.1273 ; vec2.z = 0        ;
    vec3.x = 0;  vec3.y =0      ; vec3.z = 0.220941 ;
    vec4.x = 0;  vec4.y =0.612  ; vec4.z = -0.1719  ;
    vec5.x = 0;  vec5.y =0.5723 ; vec5.z = 0        ;
    vec6.x = 0;  vec6.y =0      ; vec6.z = 0.1149   ;
    vec7.x = 0;  vec7.y =0.1157 ; vec7.z = 0        ;/* */
       
    /*vec2 = vec2 + vec1; 
    vec3 = vec3 + vec2;
    vec4 = vec4 + vec3;
    vec5 = vec5 + vec4;
    vec6 = vec6 + vec5;
    vec7 = vec7 + vec6;*/
               
           
  /* StlPart01Tf -> SetValue(TRANSLATION, vec1.x,  vec1.y , vec1.z , 0);  
   StlPart02Tf -> SetValue(TRANSLATION, vec2.x,  vec2.y , vec2.z , 0);    
   StlPart03Tf -> SetValue(TRANSLATION, vec3.x,  vec3.y , vec3.z , 0);    
   StlPart04Tf -> SetValue(TRANSLATION, vec4.x,  vec4.y , vec4.z , 0);    
   StlPart05Tf -> SetValue(TRANSLATION, vec5.x,  vec5.y , vec5.z , 0);    
   StlPart06Tf -> SetValue(TRANSLATION, vec6.x,  vec6.y , vec6.z , 0);    
   StlPart07Tf -> SetValue(TRANSLATION, vec7.x,  vec7.y , vec7.z , 0);*/
   
   StlPart01Tf -> SetValue(TRANSLATION, 0., -0.    , 0.87   , 0);// 0,  0        ,0.435  , 0);
   StlPart02Tf -> SetValue(TRANSLATION, 0., -0.    , 0.9973 , 0);// 0,  0        ,0.1273 , 0);
   StlPart03Tf -> SetValue(TRANSLATION, 0., -0.221 , 0.9973 , 0);// 0,  0.220941 ,0      , 0);
   StlPart04Tf -> SetValue(TRANSLATION, 0., -0.05  , 1.61   , 0);// 0,  -0.1719  ,0.612  , 0);
   StlPart05Tf -> SetValue(TRANSLATION, 0., -0.05  , 2.182  , 0);// 0,  0        ,0.5723 , 0);
   StlPart06Tf -> SetValue(TRANSLATION, 0., -0.164 , 2.182  , 0);// 0,  0.1149   ,0      , 0);
   StlPart07Tf -> SetValue(TRANSLATION, 0., -0.164 , 2.2973 , 0);// 0,  0        ,0.1157 , 0);
                    
           
   /*StlPart01Tf -> SetValue(TRANSLATION,  0,  0        ,0.435  , 0);                                      
   StlPart02Tf -> SetValue(TRANSLATION,  0,  0        ,0.1273 , 0);                                    
   StlPart03Tf -> SetValue(TRANSLATION,  0,  0.220941 ,0      , 0);                                   
   StlPart04Tf -> SetValue(TRANSLATION,  0,  -0.1719  ,0.612  , 0);                                     
   StlPart05Tf -> SetValue(TRANSLATION,  0,  0        ,0.5723 , 0);                                     
   StlPart06Tf -> SetValue(TRANSLATION,  0,  0.1149   ,0      , 0);                                    
   StlPart07Tf -> SetValue(TRANSLATION,  0,  0        ,0.1157 , 0);*/                                       
             
   StlPart01 -> SetTransform(StlPart01Tf);
   StlPart02 -> SetTransform(StlPart02Tf);
   StlPart03 -> SetTransform(StlPart03Tf);
   StlPart04 -> SetTransform(StlPart04Tf);
   StlPart05 -> SetTransform(StlPart05Tf);
   StlPart06 -> SetTransform(StlPart06Tf);
   StlPart07 -> SetTransform(StlPart07Tf);   
 

                 
                 
                 
         
  /*//Set Relationship in Robot:
  //RobotMat->AddChild(Light1); 
  Light1->AddChild(StlPart01);

  StlPart01->AddChild(Off1);
  Off1->AddChild(Light2);*/
  
  RobotMat->AddChild(Light1);
  Light1->AddChild(StlPart01);
  Light1->AddChild(StlPart02);
  Light1->AddChild(StlPart03);
  Light1->AddChild(StlPart04);
  Light1->AddChild(StlPart05);
  Light1->AddChild(StlPart06);
  Light1->AddChild(StlPart07);
  
  
  
  

  StlPart01->AddChild(Off1);
  Off1->AddChild(Light2);
   
 

  //Transformation Nodes for both Robot and Chair:
  Transformation *Trans1=new Transformation;
 
  Trans1->SetValue(TRANSLATION, 0.9, 0, -0.4, 0);
  //Trans1->AddChild(ChairColor);
  Trans1->AddChild(RobotMat); Trans1->nodename= "father_tf_robot&chair";

  //Root Node:
  Node *Root=new Node;

  Root->AddChild(Trans1);
  Root->AddChild(Camera1);  Root ->nodename="root node";
  
  
  //Viewer:
  GLViewer *MyViewer=new GLViewer;

  MyViewer->Init(argc, argv);
  MyViewer->SetValue(BACKCOLOR, GREY);
  MyViewer->SetValue(BUFFER, DOUBLE);
  MyViewer->CreateWin("Working Hard", 1200, 1200);

  MyViewer->Show(Root);
  
  
  return 0;
}


